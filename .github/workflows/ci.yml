name: CI 
on:
  push: 
    branches: 
      - master
      - v* 
  pull_request: 
    branches: 
      - master 

jobs:

  build-and-test:
    name: build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        simd: [0, 1]
    defaults:
      run:
        shell: bash -l {0}

    steps: 
    - uses: actions/checkout@v1
    - name: Cache Conda
      uses: actions/cache@v2
      env:
          CACHE_NUMBER: 1
      with:
        path: ~/conda_pkgs_dir
        key:
            ${{ runner.os }}-${{ env.CACHE_NUMBER }}-${{
            hashFiles('.github/etc/env.yml') }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
          auto-update-conda: false
          activate-environment: miniconda-env
          channel-priority: strict
          environment-file: .github/etc/env.yml
          use-only-tar-bz2: true
    - name: Configure
      run: cmake -S . -B build -DENABLE_INSTALL=0 -DUSE_SIMD=${{matrix.simd}}
    - name: Build
      run: cmake --build build -j "$(getconf _NPROCESSORS_ONLN)"
    - name: Run
      run: ./build/bin/AmpGen options/example_b2kstarll.opt --CompilerWrapper::Verbose --nEvents 10000
    - name: Fit
      run: |
        ./build/bin/AmpGen options/example_kspipi.opt --nEvents 100000 --Output KsPiPi.root
        ./build/bin/SignalOnlyFitter options/example_kspipi.opt --DataSample KsPiPi.root 
      env:
        CTEST_OUTPUT_ON_FAILURE: true
    - name: Unit tests
      run: |
        mkdir xml 
        for x in build/bin/test/test_*; do 
          name=$(basename $x); $x --log_level=all --log_format=JUNIT > xml/${name}.xml 
          sed -n '/^<?xml version="1.0" encoding="UTF-8"?>$/,$p' xml/${name}.xml > xml/${name}.xml-i
          mv xml/${name}.xml-i xml/${name}.xml
        done

    - name: Upload Unit Test Results
      uses: actions/upload-artifact@v2
      with:
        name: Results (${{ runner.os }})
        path: xml

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: check files
        run: find . -name '*.xml'
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
